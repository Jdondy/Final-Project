<<<<<<< HEAD
geom_polygon( data= map_df, aes(long,lat, group = group, fill = percent_incarcerated), color="white", size = 0.5) +
ggtitle("Percentage Of Population That Is Incarcerated") +
xlab("") +
ylab("")
ggplot() +
geom_polygon( data= map_df, aes(long,lat, group = group, fill = percent_incarcerated), color="white", size = 0.5) +
ggtitle("Percentage Of Population That Is Incarcerated") +
xlab("") +
ylab("") +
theme_minimal()
ggplot() +
ggplot() +
geom_polygon( data= map_df, aes(long,lat, group = group, fill = percent_incarcerated), color="white", size = 0.5) +
ggtitle("Percentage Of Population That Is Incarcerated") +
xlab("") +
ylab("") +
theme_minimal() +
scale_fill_continuous(name="Population(millions)",low = "lightgreen", high = "darkgreen")
map_df <- left_join(states_map, incarceration_rate_df, by = "region")
ggplot() +
geom_polygon( data=states_map, aes(long,lat, group = group), color="black", fill="white" )
ggplot() +
geom_polygon( data= map_df, aes(long,lat, group = group, fill = percent_incarcerated), color="white", size = 0.5) +
ggtitle("Percentage Of Population That Is Incarcerated") +
xlab("") +
ylab("") +
theme_minimal() +
scale_fill_continuous(name="Population(millions)",low = "lightgreen", high = "darkgreen")
ggplot() +
geom_polygon( data= map_df, aes(long,lat, group = group, fill = percent_incarcerated), color="white", size = 0.5) +
ggtitle("Percentage Of Population That Is Incarcerated") +
xlab("") +
ylab("") +
theme_minimal() +
scale_fill_continuous(name="Percentage",low = "lightblue", high = "navyblue")
source("~/Documents/UW/INFO/assignment-3---incarceration-jessica5m/analysis.R")
shiny::runApp('Documents/UW/INFO/final-project-vannarys/final-deliverable')
runApp('Documents/UW/INFO/final-project-vannarys/final-deliverable')
runApp('Documents/UW/INFO/final-project-vannarys/final-deliverable')
runApp('Documents/UW/INFO/final-project-vannarys/final-deliverable')
runApp('Documents/UW/INFO/final-project-vannarys/final-deliverable')
runApp('Documents/UW/INFO/final-project-vannarys/final-deliverable')
=======
shiny::runApp()
shiny::runApp()
git pull
>>>>>>> 62be2c5383294980dd2509552174e058ad4aace2
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
<<<<<<< HEAD
runApp('Documents/UW/INFO/assignment-4-data-applications-jessica5m/A4-CO2-emissions')
runApp('Documents/UW/INFO/assignment-4-data-applications-jessica5m/A4-CO2-emissions')
runApp('Documents/UW/INFO/assignment-4-data-applications-jessica5m/A4-CO2-emissions')
runApp('Documents/UW/INFO/assignment-4-data-applications-jessica5m/A4-CO2-emissions')
runApp('Documents/UW/INFO/assignment-4-data-applications-jessica5m/A4-CO2-emissions')
runApp('Documents/UW/INFO/assignment-4-data-applications-jessica5m/A4-CO2-emissions')
runApp('Documents/UW/INFO/assignment-4-data-applications-jessica5m/A4-CO2-emissions')
install.packages("plotly")
install.packages("plotly")
library(plotly)
runApp('Documents/UW/INFO/assignment-4-data-applications-jessica5m/A4-CO2-emissions')
runApp('Documents/UW/INFO/assignment-4-data-applications-jessica5m/A4-CO2-emissions')
runApp('Documents/UW/INFO/assignment-4-data-applications-jessica5m/A4-CO2-emissions')
runApp('Documents/UW/INFO/final-project-vannarys/final-deliverable')
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
movie_df <- read.csv("https://raw.githubusercontent.com/info201b-2021-aut/final-project-vannarys/main/movies.csv?token=AV5FGDUB6ANWU35AVK6LH4LBXJR4G")
movie_df <- mutate(
movie_df,
WorldwideBox.Office = as.numeric(gsub('[$,]', '', WorldwideBox.Office))
)
top_year_df <- movie_df %>%
group_by(Year) %>%
filter(Year > "1989")
top_year_df <- top_year_df[,-6]
top_year_df <- top_year_df[,-5]
top_year_df <- top_year_df[,-1]
top_year_df <- top_year_df %>%
arrange(desc(WorldwideBox.Office)) %>%
group_by(Year) %>%
slice(1:5)
View(top_year_df)
runApp()
runApp()
final_graph <- ggplot(top_year_df, aes(Year, WorldwideBox.Office, fill= Movie)) +
geom_bar(stat="identity")
View(final_graph)
View(top_year_df)
top_year_df <- top_year_df %>%
filter(Year == 2005)
View(top_year_df)
final_graph <- ggplot(top_year_df, aes(Year, WorldwideBox.Office, fill= Movie)) +
geom_bar(stat="identity")
fig <- ggplotly(final_graph)
library(ggplot2)
final_graph <- ggplot(top_year_df, aes(Year, WorldwideBox.Office, fill= Movie)) +
geom_bar(stat="identity")
ggplot(top_year_df, aes(Year, WorldwideBox.Office, fill= Movie)) +
geom_bar(stat="identity")
runApp()
runApp()
runApp()
top_year_df <- top_year_df %>%
arrange(desc(WorldwideBox.Office)) %>%
group_by(Year) %>%
slice(1:5)
top_year_df <- top_year_df %>%
filter(Year == 2005)
top_year_df <- top_year_df %>%
ggplotly() %>%
ggplot(top_year_df, aes(Year, WorldwideBox.Office, fill= Movie)) +
geom_bar(stat="identity")
top_year_df <- top_year_df %>%
ggplot(top_year_df, aes(Year, WorldwideBox.Office, fill= Movie)) +
geom_bar(stat="identity") %>%
ggplotly()
movie_df <- read.csv("https://raw.githubusercontent.com/info201b-2021-aut/final-project-vannarys/main/movies.csv?token=AV5FGDUB6ANWU35AVK6LH4LBXJR4G")
movie_df <- mutate(
movie_df,
WorldwideBox.Office = as.numeric(gsub('[$,]', '', WorldwideBox.Office))
)
top_year_df <- movie_df %>%
group_by(Year) %>%
filter(Year > "1989")
top_year_df <- top_year_df[,-6]
top_year_df <- top_year_df[,-5]
top_year_df <- top_year_df[,-1]
top_year_df <- top_year_df %>%
arrange(desc(WorldwideBox.Office)) %>%
group_by(Year) %>%
slice(1:5)
top_year_df <- top_year_df %>%
filter(Year == 2005)
top_year_df <- top_year_df %>%
ggplot(top_year_df, aes(Year, WorldwideBox.Office, fill= Movie)) +
geom_bar(stat="identity") %>%
ggplotly()
runApp()
runApp()
runApp()
runApp()
runApp()
=======
runApp()
runApp()
runApp()
data <- read.csv("https://raw.githubusercontent.com/info201b-2021-aut/final-project-vannarys/main/movies.csv?token=AV5GCDQ6I4IOZLRE2WEP74TBUCFL6")
data <- read.csv("https://raw.githubusercontent.com/info201b-2021-aut/final-project-vannarys/main/movies.csv?token=AV5GCTN37QK77CILJCDWCC3BXJZNK")
View(data)
runApp()
runApp()
View(data)
runApp()
runApp()
scatter_plot <- ggplot(data_3, aes(x= WorldwideBox.Office, y= DomesticBox.Office)) +
geom_point(size = 2, color = "blue") +
#geom_smooth() +
ggtitle("Domestic Box Office Revenue vs. Worldwide Box Office Revenue") +
xlab("Worldwide Box Office Revenue(Dollars)") +
ylab("Domestic Box Office Revenue(Dollars)")
runApp()
runApp()
runApp()
runApp()
runApp()
data_3 <- read.csv("https://raw.githubusercontent.com/info201b-2021-aut/final-project-vannarys/main/movies.csv?token=AV5GCTN37QK77CILJCDWCC3BXJZNK")
View(data_3)
runApp()
shiny::runApp()
>>>>>>> 62be2c5383294980dd2509552174e058ad4aace2
shiny::runApp()
runApp()
runApp()
runApp()
